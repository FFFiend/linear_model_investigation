---
title: "Investigating the correlation between a vote for Biden or Trump based on a persons education, gender, race and age."
author: 
  - Fares Alkorani
  - Owais Zahid
thanks: "Code and data are available at: https://github.com/FFFiend/linear_model_investigation."
date: today
date-format: long
abstract: "In this paper, we discuss the correlation between various statistics of the respondents to the CES2020 election survey, and whether they voted for Trump or Biden. The statistics are: age, education, gender and race."
format: pdf
number-sections: true
bibliography: references.bib
---
# Introduction

We are concerned with assessing whether we can predict what candidate a new survey respondent is going to vote for, given their age, education, gender and race. Accordingly, we shall be simulating a similar scenario for the 2020 US presidential election below. 


# Simulation
We first start with simulating the dataset, and recall that we are concerned with each voter's education level, gender, race and age. Our chosen sample size is 8000, and the categories for education and race have been named akin to the categories in the dataset. Thus, the header of the table obtained for the simulation is shown below:
```{r}
#| include: true
#| warning: false
#| message: false
#| echo: false
# setting seed, prime number :P
set.seed(71)
library(knitr)
library(tibble)
library(dplyr)
# sample size 8000
num_obs <- 8000

# simulating the actual data
# using 8 categories for races as in the dataset, and ages 0-100.
us_political_preferences <- tibble(
  education = sample(0:4, size = num_obs, replace = TRUE),
  gender = sample(0:1, size = num_obs, replace = TRUE),
  race = sample(1:8, size = num_obs, replace = TRUE),
  age = sample(0:100, size = num_obs, replace=TRUE),
  support_prob = ((education + gender + race + age) / 7),
) |>
  mutate(
    supports_biden = if_else(runif(n = num_obs) < support_prob, "yes", "no"),
    education = case_when(
      education == 0 ~ "< High school",
      education == 1 ~ "High school",
      education == 2 ~ "Some college",
      education == 3 ~ "College",
      education == 4 ~ "Post-grad"
    ),
    gender = if_else(gender == 0, "Male", "Female"),
    race = case_when(
      race == 1 ~ "White",
      race == 2 ~ "Black",
      race == 3 ~ "Hispanic",
      race == 4 ~ "Asian",
      race == 5 ~ "Native American",
      race == 6 ~ "Middle Eastern",
      race == 7 ~ "Two or more races",
      race == 8 ~ "Other"
    )
  ) |>
  select(-support_prob, supports_biden, gender, education, race, age)

# preview the simulated data
cat("Table 1. Header for the political preferences dataset.")
kable(head(us_political_preferences))
```

# Data {#sec-data}

We will be using the 2020 Cooperative Election Study (CES) (CITATION TODO) as our dataset, which can be previewed below:

```{r}
#| include: true
#| warning: false
#| message: false
#| echo: false

library(dplyr)
library(tidyverse)

raw_data = read.csv("~/linear_model_investigation/data/ces2020_raw.parquet")
kable(head(raw_data))
```
To elaborate further on the dataset starting with the ```votereg``` column, values 1 and 2 signifies whether a person has voted or not, respectively. Naturally, for entries with a value of 2 under this column, the corresponding ```CC20_410``` value is NA, and in the other case the values 1 and 2 signify a vote for Biden or Trump respectively. The naming of this column corresponds to the question in the survey from which the data for it was collected, which asks "For whom did you vote for President of the United States?" (citation needed), with a total of 6 options, where Biden and Trump correspond to the first two.

Next, there are two values for gender: 1 and 2 corresponding to Male and Female. There are also a total of 8 categories under race corresponding to numbers 1 through 8, as well as 6 education categories ranging from "No HS" to "Post-grad".

Since we are interested with ages and not respondent birth years, we may process the dataset as such to reflect this:

```{r}
#| include: true
#| warning: false
#| message: false
#| echo: false

raw_data$birthyr <- as.numeric(raw_data$birthyr)
current_year <- as.numeric(year(as.Date(Sys.time())))

# Subtract current year from birth year column to get age
raw_data <- raw_data %>% mutate(birthyr = current_year - birthyr)
# rename to age
names(raw_data)[names(raw_data) == "birthyr"] <- "age"
cat("Table 3. Header for 2020 US Election Survey data with the birthyr column converted to ages")
kable(head(raw_data))

# save data back into the csv.
write.csv(raw_data,"~/linear_model_investigation/data/ces2020.parquet")
```
We shall now filter for non NA values within the ```CC20_410``` column, as we are only concerned with respondents that cast a vote, which also means we filter for entries with a ```votereg``` value of 1. Additionally, we shall map each education level and race value to its corresponding value from the survey, and we finally obtain a table as follows:

```{r}
#| include: true
#| warning: false
#| message: false
#| echo: false
# load in libraries.
library(tidyverse)
library(dplyr)
library(rstanarm)
library(modelsummary)

# read and convert values in each column to integer.
ces2020 <-
  read_csv(
    "~/linear_model_investigation/data/ces2020.parquet",
    col_types =
      cols(
        "votereg" = col_integer(),
        "CC20_410" = col_integer(),
        "gender" = col_integer(),
        "educ" = col_integer(),
        "race" = col_integer(),
        "age" = col_integer()
      )
  )

# formatting data, mapping race ids to races.
ces2020 <-
  ces2020 |>
  filter(votereg == 1,
         CC20_410 %in% c(1, 2)) |>
  mutate(
    voted_for = if_else(CC20_410 == 1, "Biden", "Trump"),
    voted_for = as_factor(voted_for),
    gender = if_else(gender == 1, "Male", "Female"),
    education = case_when(
      educ == 1 ~ "No HS",
      educ == 2 ~ "High school graduate",
      educ == 3 ~ "Some college",
      educ == 4 ~ "2-year",
      educ == 5 ~ "4-year",
      educ == 6 ~ "Post-grad"
    ),
    education = factor(
      education,
      levels = c(
        "No HS",
        "High school graduate",
        "Some college",
        "2-year",
        "4-year",
        "Post-grad"
      )
    ),
    race = case_when(
      race == 1 ~ "White",
      race == 2 ~ "Black",
      race == 3 ~ "Hispanic",
      race == 4 ~ "Asian",
      race == 5 ~ "Native American",
      race == 6 ~ "Middle Eastern",
      race == 7 ~ "Two or more races",
      race == 8 ~ "Other"
    ),
    race = factor(
      race,
      levels = c(
        "White",
        "Black",
        "Hispanic",
        "Asian",
        "Native American",
        "Middle Eastern",
        "Two or more races",
        "Other"
      )
    )
  ) |> select(voted_for, gender, education, race, age)
cat("Table 4. Header for Processed 2020 US Election Survey data.")
# preview data after mutation.
kable(head(ces2020))
```
TODO: complete bar chart section from the worked example.
# Model
Since we wish to predict how likely it is for a respondent to cast a vote for Biden based on their gender, age, education and race, we shall use the rstanarm (citation needed) library to 

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up
We define $y_i$ as the candidate the $ith$ respondent likely voted for, mapping 1 and 0 to Biden and Trump respectively. The variables $gender_i$, $age_i$, $race_i$ and $education_i$ are the selected attributes (with the same names, of) of the $ith$ respondent. 

\begin{align} 
y_i|\pi_i, &\sim \mbox{Bern}(\pi_i) \\
logit(\pi_i) = \beta_0 + \beta_1 \times gender_i + \beta_2 \times age_i + \beta_3 \times education_i + \beta_4 \times race_i \\ 
\beta_0 &\sim \mbox{Normal}(0, 2.5) \\
\beta_1 &\sim \mbox{Normal}(0, 2.5) \\
\beta_2 &\sim \mbox{Normal}(0, 2.5) \\
\beta_3 &\sim \mbox{Normal}(0, 2.5) \\
\beta_4 &\sim \mbox{Normal}(0, 2.5)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification
I actually have no idea what to expect lol

# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| include: true
#| warning: false
#| message: false
#| echo: false
cat("results")
political_preferences <-
  readRDS(file = "~/linear_model_investigation/data/political_preferences.rds")

# model summary
final_table = modelsummary(
  list(
    "Support Biden" = political_preferences
  ),
  statistic = "mad"
)
kable(final_table)
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...


## Diagnostics


\newpage


# References